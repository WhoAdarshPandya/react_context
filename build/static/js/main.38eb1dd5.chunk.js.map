{"version":3,"sources":["providerContext/TodoListContext.js","components/TodoInput/TodoInput.js","components/Todos/Todos.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["TodoListContext","createContext","TodoListProvider","props","useState","title","id","completed","Todos","setTodos","Provider","value","children","theme","createMuiTheme","palette","primary","main","TodoInput","text","setText","useContext","addTodo","new_todo","uuid","prev","style","width","margin","textAlign","TextField","color","label","onKeyPress","e","key","Keyp","onChange","target","changeText","Button","variant","onClick","todo","toString","TodoList","todos","map","App","Typography","align","ReactDOM","render","document","getElementById"],"mappings":"sPAEaA,EAAkBC,0BAExB,SAASC,EAAiBC,GAAQ,IAAD,EACVC,mBAAS,CAC/B,CAACC,MAAM,cAAcC,GAAG,IAAIC,WAAU,KAFN,mBAC7BC,EAD6B,KACtBC,EADsB,KAIpC,OACI,kBAACT,EAAgBU,SAAjB,CAA0BC,MAAO,CAACH,EAAMC,IACnCN,EAAMS,UCAnB,IAAMC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,cAKG,SAASC,IAAa,IAAD,EACVd,mBAAS,IADC,mBAC3Be,EAD2B,KACrBC,EADqB,OAETC,qBAAWrB,GAFF,mBAErBS,GAFqB,WAM5Ba,EAAU,WACd,GAAY,KAATH,EACH,CACI,IAAII,EAAW,CACXlB,MAAMc,EACNb,GAAGkB,cACHjB,WAAU,GAEdE,GAAS,SAAAgB,GAAI,4BAAQA,GAAR,CAAaF,OAC1BH,EAAQ,MASd,OACE,kBAAC,IAAD,CAAkBP,MAAOA,GACvB,yBAAKa,MAAO,CAAEC,MAAO,MAAOC,OAAQ,OAAQC,UAAW,WACrD,kBAACC,EAAA,EAAD,CACEJ,MAAO,CAAEC,MAAO,QAChBI,MAAM,UACNC,MAAM,aACNrB,MAAOQ,EACPc,WAAY,SAACC,IAdR,SAAAA,GACI,UAAVA,EAAEC,KAEDb,IAWoBc,CAAKF,IACzBG,SAAU,SAACH,IA9BA,SAACA,GAClBd,EAAQc,EAAEI,OAAO3B,OA8BT4B,CAAWL,MAGf,6BACA,6BACA,kBAACM,EAAA,EAAD,CACEd,MAAO,CAAEG,UAAW,UACpBY,QAAQ,YACRV,MAAM,UACNW,QAAS,WACPpB,MALJ,YCvDO,SAASd,EAAT,GAAwB,IAARmC,EAAO,EAAPA,KAC3B,OACI,6BACKA,EAAKtC,MACLsC,EAAKpC,UAAUqC,WACfD,EAAKrC,ICHH,SAASuC,IAAY,IAAD,EACNxB,qBAAWrB,GADL,mBACxB8C,EADwB,UAE/B,OACI,6BAEIA,EAAMC,KAAI,SAAAJ,GAAI,OAAK,kBAAC,EAAD,CAAOR,IAAKQ,EAAKrC,GAAIqC,KAAQA,Q,YCEtD9B,EAAQC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,cAKG,SAAS+B,IACtB,OACE,kBAAC9C,EAAD,KACE,kBAAC,IAAD,CAAkBW,MAAOA,GACvB,6BACE,kBAACoC,EAAA,EAAD,CAAYR,QAAQ,KAAKV,MAAM,UAAUmB,MAAM,UAA/C,cAGA,kBAAChC,EAAD,MACA,kBAAC2B,EAAD,SCxBVM,IAASC,OAAO,kBAACJ,EAAD,MAAOK,SAASC,eAAe,W","file":"static/js/main.38eb1dd5.chunk.js","sourcesContent":["import React,{useState,createContext} from 'react'\r\n\r\nexport const TodoListContext = createContext()\r\n\r\nexport function TodoListProvider(props) {\r\n    const [Todos, setTodos] = useState([\r\n        {title:'lorem ipsum',id:'1',completed:false}\r\n    ])\r\n    return (\r\n        <TodoListContext.Provider value={[Todos,setTodos]}>\r\n            {props.children}\r\n        </TodoListContext.Provider>\r\n    );\r\n}\r\n","import React, { useState,useContext } from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport {TodoListContext} from '../../providerContext/TodoListContext'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#1976d2\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function TodoInput() {\r\n  const [text, setText] = useState(\"\");\r\n  const [todos,setTodos] = useContext(TodoListContext)\r\n  const changeText = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n  const addTodo = () => {\r\n    if(text !== \"\")\r\n    {\r\n        let new_todo = {\r\n            title:text,\r\n            id:uuid(),\r\n            completed:false\r\n        }\r\n        setTodos(prev => [...prev,new_todo])\r\n        setText(\"\")\r\n    }\r\n  };\r\n  const Keyp = e => {\r\n      if(e.key === \"Enter\")\r\n      {\r\n          addTodo()\r\n      }\r\n  }\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <div style={{ width: \"50%\", margin: \"auto\", textAlign: \"center\" }}>\r\n        <TextField\r\n          style={{ width: \"100%\" }}\r\n          color=\"primary\"\r\n          label=\"Enter Todo\"\r\n          value={text}\r\n          onKeyPress={(e) => {Keyp(e)}}\r\n          onChange={(e) => {\r\n            changeText(e);\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n        <Button\r\n          style={{ textAlign: \"center\" }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            addTodo();\r\n          }}\r\n        >\r\n          SUBMIT\r\n        </Button>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Todos({todo}) {\r\n    return (\r\n        <div>\r\n            {todo.title}\r\n            {todo.completed.toString()}\r\n            {todo.id}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport Todos from '../Todos/Todos'\r\nimport {TodoListContext} from '../../providerContext/TodoListContext'\r\n\r\nexport default function TodoList() {\r\n    const [todos,setTodos] = useContext(TodoListContext)\r\n    return (\r\n        <div>\r\n        {\r\n            todos.map(todo => (<Todos key={todo.id} todo = {todo}/>))\r\n        }\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport TodoInput from \"./components/TodoInput/TodoInput\";\r\nimport TodoList from \"./components/TodoList/TodoList\";\r\nimport {\r\n  Typography,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core\";\r\n// !context provider\r\nimport { TodoListProvider } from \"./providerContext/TodoListContext\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#1976d2\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function App() {\r\n  return (\r\n    <TodoListProvider>\r\n      <MuiThemeProvider theme={theme}>\r\n        <div>\r\n          <Typography variant=\"h2\" color=\"primary\" align=\"center\">\r\n            To Do List\r\n          </Typography>\r\n          <TodoInput />\r\n          <TodoList />\r\n        </div>\r\n      </MuiThemeProvider>\r\n    </TodoListProvider>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}